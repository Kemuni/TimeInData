"""Add unique constraint and change activity enums

Revision ID: e7335a3f2ef7
Revises: ce55c6ad0783
Create Date: 2025-04-08 20:06:42.966112

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql


# revision identifiers, used by Alembic.
revision: str = 'e7335a3f2ef7'
down_revision: Union[str, None] = 'ce55c6ad0783'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint('uix_user_id_time', 'actions', ['user_id', 'time'])

    # Временное переименование колонки
    op.alter_column('actions', 'type', new_column_name='type_old')

    # Создание нового enum типа
    new_enum = postgresql.ENUM(
        'SLEEP', 'WORK', 'STUDY', 'FAMILY', 'FRIENDS',
        'PASSIVE', 'EXERCISE', 'GAMES',
        name='activitytypes_new'
    )
    new_enum.create(op.get_bind())

    # Добавление новой колонки с новым типом
    op.add_column('actions', sa.Column('type', new_enum))

    # Перенос данных с преобразованием значений
    op.execute("""
            UPDATE actions 
            SET type = 
                CASE type_old::text
                    WHEN 'STUDYING' THEN 'STUDY'::activitytypes_new
                    WHEN 'READING' THEN 'PASSIVE'::activitytypes_new
                    ELSE type_old::text::activitytypes_new
                END
        """)

    # Удаление временной колонки
    op.drop_column('actions', 'type_old')

    # Переименование типа (не поддерживается напрямую в PostgreSQL)
    op.execute("DROP TYPE activitytypes")
    op.execute("ALTER TYPE activitytypes_new RENAME TO activitytypes")

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('uix_user_id_time', 'actions', type_='unique')

    # Временное переименование колонки
    op.alter_column('actions', 'type', new_column_name='type_new')

    # Создание старого enum типа
    old_enum = postgresql.ENUM(
        'SLEEP', 'WORK', 'STUDYING', 'FAMILY', 'FRIENDS',
        'PASSIVE', 'EXERCISE', 'READING',
        name='activitytypes_old'
    )
    old_enum.create(op.get_bind())

    # Добавление колонки со старым типом
    op.add_column('actions', sa.Column('type', old_enum))

    # Перенос данных с преобразованием значений
    op.execute("""
            UPDATE actions 
            SET type = 
                CASE type_new::text
                    WHEN 'STUDY' THEN 'STUDYING'::activitytypes_old
                    WHEN 'GAMES' THEN 'PASSIVE'::activitytypes_old
                    ELSE type_new::text::activitytypes_old
                END
        """)

    # Удаление временной колонки
    op.drop_column('actions', 'type_new')

    # Переименование типа
    op.execute("DROP TYPE activitytypes")
    op.execute("ALTER TYPE activitytypes_old RENAME TO activitytypes")

    # ### end Alembic commands ###
